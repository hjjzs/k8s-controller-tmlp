/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "test/pkg/apis/dockerfile/v1"

	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// DockerFileLister helps list DockerFiles.
// All objects returned here must be treated as read-only.
type DockerFileLister interface {
	// List lists all DockerFiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DockerFile, err error)
	// DockerFiles returns an object that can list and get DockerFiles.
	DockerFiles(namespace string) DockerFileNamespaceLister
	DockerFileListerExpansion
}

// dockerFileLister implements the DockerFileLister interface.
type dockerFileLister struct {
	listers.ResourceIndexer[*v1.DockerFile]
}

// NewDockerFileLister returns a new DockerFileLister.
func NewDockerFileLister(indexer cache.Indexer) DockerFileLister {
	return &dockerFileLister{listers.New[*v1.DockerFile](indexer, v1.Resource("dockerfile"))}
}

// DockerFiles returns an object that can list and get DockerFiles.
func (s *dockerFileLister) DockerFiles(namespace string) DockerFileNamespaceLister {
	return dockerFileNamespaceLister{listers.NewNamespaced[*v1.DockerFile](s.ResourceIndexer, namespace)}
}

// DockerFileNamespaceLister helps list and get DockerFiles.
// All objects returned here must be treated as read-only.
type DockerFileNamespaceLister interface {
	// List lists all DockerFiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DockerFile, err error)
	// Get retrieves the DockerFile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.DockerFile, error)
	DockerFileNamespaceListerExpansion
}

// dockerFileNamespaceLister implements the DockerFileNamespaceLister
// interface.
type dockerFileNamespaceLister struct {
	listers.ResourceIndexer[*v1.DockerFile]
}
